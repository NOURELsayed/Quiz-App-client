[{"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/reportWebVitals.js":"1","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/App.js":"2","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/index.js":"3","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/store/index.js":"4","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/actions/updateQuestion.js":"5","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/reducers/questionListReducers.js":"6","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Navbar.js":"7","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Login.js":"8","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Home.js":"9","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/routing.js":"10","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/SignUp.js":"11","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/actions/actionstype.js":"12"},{"size":362,"mtime":1608080292408,"results":"13","hashOfConfig":"14"},{"size":275,"mtime":1608504368603,"results":"15","hashOfConfig":"14"},{"size":571,"mtime":1608084763589,"results":"16","hashOfConfig":"14"},{"size":438,"mtime":1609116724068,"results":"17","hashOfConfig":"14"},{"size":855,"mtime":1609113476001,"results":"18","hashOfConfig":"14"},{"size":587,"mtime":1608519132762,"results":"19","hashOfConfig":"14"},{"size":462,"mtime":1608156922139,"results":"20","hashOfConfig":"14"},{"size":3471,"mtime":1609113534871,"results":"21","hashOfConfig":"14"},{"size":3500,"mtime":1609119022910,"results":"22","hashOfConfig":"14"},{"size":630,"mtime":1608506330003,"results":"23","hashOfConfig":"14"},{"size":4029,"mtime":1609113520208,"results":"24","hashOfConfig":"14"},{"size":52,"mtime":1608509236444,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3anhco",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/reportWebVitals.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/App.js",["52"],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/index.js",[],["53","54"],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/store/index.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/actions/updateQuestion.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/reducers/questionListReducers.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Navbar.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Login.js",["55"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled(Container)``;\nconst LoginForm = styled(Form)`\n  h1 {\n    margin: 22px auto 20px;\n    text-align: center;\n  }\n  background-color: rgba(var(--d87, 255, 255, 255), 1);\n  border: 1px solid #dbdbdb;\n  border: 1px solid rgba(var(--b6a, 219, 219, 219), 1);\n  border-radius: 1px;\n  margin: 0 0 10px;\n  padding: 10px 0;\n  max-width: 350px;\n  margin: auto;\n  height: 400px;\n  margin-top: 125px;\n  a {\n    color: rgba(var(--fe0, 0, 55, 107), 1);\n    font-size: 12px;\n    line-height: 14px;\n    margin-top: 12px;\n    text-align: center;\n    margin: 120px;\n  }\n`;\nconst Input = styled(Form.Control)`\n  width: 250px;\n  margin: auto;\n  background: rgba(var(--b3f, 250, 250, 250), 1);\n  border: 0;\n  border: 1px solid rgba(var(--ca6, 219, 219, 219), 1);\n`;\nconst LoginButton = styled(Button)`\n  margin-bottom: 8px;\n  border: 1px solid transparent;\n  width: 250px;\n  margin: 0 auto;\n  display: block;\n`;\nconst FormElement = styled.div``;\nconst SignupLink = styled.div`\n  background-color: rgba(var(--d87, 255, 255, 255), 1);\n  border: 1px solid #dbdbdb;\n  border: 1px solid rgba(var(--b6a, 219, 219, 219), 1);\n  border-radius: 1px;\n  margin: 0 0 10px;\n  padding: 10px 0;\n  max-width: 350px;\n  margin: auto;\n  margin-top: 10px;\n  p {\n    font-size: 14px;\n    margin: 15px;\n    text-align: center;\n    a {\n      color: rgba(var(--d69, 0, 149, 246), 1);\n    }\n  }\n`;\n\nfunction Login() {\n  let history = useHistory();\n\n  const [userInfo, setUserInfo] = useState(0);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    switch (e.target.id) {\n      case \"username\":\n        setUserInfo({\n          ...userInfo,\n          username: e.target.value,\n        });\n        break;\n      case \"password\":\n        setUserInfo({\n          ...userInfo,\n          password: e.target.value,\n        });\n        break;\n      default:\n    }\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const user = userInfo;\n    try {\n      const response = await axios.post(\"http://localhost:3000/Login\", user);\n      if (response.data.toLowerCase() === \"ok\") {\n        history.push(\"/Home\");\n      }else{\n        alert(response.data)\n      }\n    } catch (error) {\n    }\n  };\n\n  return (\n    <Wrapper>\n      {/* <div>{error.response.data}</div> */}\n      <LoginForm onSubmit={handleSubmit}>\n        <h1> Quiz App </h1>\n        <FormElement>\n          <Form.Group controlId=\"username\">\n            <Input\n              type=\"username\"\n              placeholder=\"Enter username\"\n              value={userInfo.username}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={userInfo.password}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n\n          <LoginButton variant=\"primary\" type=\"submit\">\n            Submit\n          </LoginButton>\n        </FormElement>\n        <a href=\"#\">Forget Password?</a>\n      </LoginForm>\n      <SignupLink>\n        <p>\n          Don't have an account? <a href=\"/Signup\">SignUp</a>\n        </p>\n      </SignupLink>\n    </Wrapper>\n  );\n}\n\nexport default Login;\n","/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/Home.js",["56","57"],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/routing.js",[],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/components/SignUp.js",["58","59"],"/media/norhan/New Volume/work/React-projects/quiz-app/quiz-app/src/actions/actionstype.js",[],{"ruleId":"60","severity":1,"message":"61","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":12},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":136,"column":9,"nodeType":"70","endLine":136,"endColumn":21},{"ruleId":"60","severity":1,"message":"71","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":74,"column":6,"nodeType":"74","endLine":74,"endColumn":15,"suggestions":"75"},{"ruleId":"60","severity":1,"message":"76","line":47,"column":7,"nodeType":"62","messageId":"63","endLine":47,"endColumn":18},{"ruleId":"68","severity":1,"message":"77","line":161,"column":9,"nodeType":"70","endLine":161,"endColumn":12},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fetcheQuestion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getScore'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'FormElement' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [Answers, getScore]",{"range":"83","text":"84"},[2674,2683],"[Answers, getScore]"]